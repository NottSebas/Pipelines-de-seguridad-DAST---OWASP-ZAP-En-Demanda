name: OWASP ZAP DAST Scan

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 1 * * *'

jobs:
  zap_scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Change directory permissions
        run: chmod -R 777 /zap/wrk/

      - name: Ensure directory ownership
        run: sudo chown -R 1000:1000 /zap/wrk/

      - name: Run OWASP ZAP using Docker
        run: |
          docker pull ghcr.io/zaproxy/zaproxy:nightly
          docker run --user root -v $(pwd):/zap/wrk/:rw -t ghcr.io/zaproxy/zaproxy:nightly zap-baseline.py -t https://example.com -r /zap/wrk/zap_report.html

      - name: List ZAP work directory
        run: ls -la /zap/wrk/

      - name: Upload ZAP report
        uses: actions/upload-artifact@v4
        with:
          name: zap-scan-results
          path: /zap/wrk/zap_report.html

      - name: Create issue for vulnerabilities
        uses: actions/github-script@v3
        with:
          script: |
            const issues = await github.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: ['zap-scan']
            });
            if (issues.data.length > 0) {
              issues.data.forEach(issue => {
                github.issues.update({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  title: `New vulnerabilities found by OWASP ZAP scan: ${issue.title}`,
                  body: `Details: ${issue.body}`
                });
              });
            } else {
              github.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: `New vulnerabilities found by OWASP ZAP scan`,
                body: `Details: [View scan results](attachment://zap_report.html)`
              });
